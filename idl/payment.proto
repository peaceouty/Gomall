syntax = "proto3";

package payment;

option go_package ="/payment";

service PaymentService {
    rpc Charge(ChargeReq) returns (ChargeResp) {}
    rpc CancelPayment(CancelPaymentReq) returns (CancelPaymentResp) {}
    rpc ScheduleCancelPayment(ScheduleCancelPaymentReq) returns (ScheduleCancelPaymentResp) {}
}

message CreditCardInfo {
    string credit_card_number = 1;
    int32 credit_card_cvv = 2;
    int32 credit_card_expiration_year = 3;
    int32 credit_card_expiration_month = 4;
}

message ChargeReq {
    float amount = 1;
    CreditCardInfo credit_card = 2;
    string order_id = 3;
    uint32 user_id = 4;
}

message ChargeResp {
    string transaction_id = 1;
}

message CancelPaymentReq {
    string transaction_id = 1;
    string order_id = 2;
    uint32 user_id = 3;
}

message CancelPaymentResp {
    bool success = 1;
    string message = 2;
}

message ScheduleCancelPaymentReq {
    string transaction_id = 1;
    string order_id = 2;
    uint32 user_id = 3;
    int64 cancel_time = 4; // Unix timestamp for when the payment should be canceled
}

message ScheduleCancelPaymentResp {
    bool success = 1;
    string message = 2;
}